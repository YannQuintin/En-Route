[{"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/index.js":"1","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/reportWebVitals.js":"2","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/roots/App.js":"3","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Navbar/Navbar.js":"4","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Auth/SignUp.js":"5","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/Services/auth.services.js":"6","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Comments/Form/AddCommentForm.js":"7","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Auth/ProtectedRoutes.js":"8","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Auth/Login.js":"9","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/Services/upload-service.js":"10","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Footer/Footer.js":"11","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Button/Button.js":"12","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Home/Home.js":"13","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/About/About.js":"14","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Trainings/Trainings.js":"15","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Adventures/Adventures.js":"16","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Users/ProfileDetails.js":"17","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/Services/user-service.js":"18","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Users/Forms/EditProfileForm.js":"19","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Rides/RideDetails.js":"20","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/Services/ride-service.js":"21","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Rides/Forms/EditRideForm.js":"22","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Rides/RideList.js":"23","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Rides/Forms/AddRideForm.js":"24","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Home/HeroSection.js":"25","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Cards/CardItems.js":"26","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Cards/Cards.js":"27","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Users/UserList.js":"28"},{"size":605,"mtime":1607037715268,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1606921290716,"results":"31","hashOfConfig":"30"},{"size":4782,"mtime":1607511478682,"results":"32","hashOfConfig":"30"},{"size":6533,"mtime":1607512933981,"results":"33","hashOfConfig":"30"},{"size":2077,"mtime":1607253910547,"results":"34","hashOfConfig":"30"},{"size":1163,"mtime":1607435889731,"results":"35","hashOfConfig":"30"},{"size":2282,"mtime":1607100072710,"results":"36","hashOfConfig":"30"},{"size":1036,"mtime":1607448995897,"results":"37","hashOfConfig":"30"},{"size":2799,"mtime":1607512182543,"results":"38","hashOfConfig":"30"},{"size":548,"mtime":1607346572663,"results":"39","hashOfConfig":"30"},{"size":4800,"mtime":1607512922515,"results":"40","hashOfConfig":"30"},{"size":724,"mtime":1607510070393,"results":"41","hashOfConfig":"30"},{"size":229,"mtime":1607511366389,"results":"42","hashOfConfig":"30"},{"size":404,"mtime":1607511368377,"results":"43","hashOfConfig":"30"},{"size":689,"mtime":1607434346061,"results":"44","hashOfConfig":"30"},{"size":1402,"mtime":1607507786319,"results":"45","hashOfConfig":"30"},{"size":3673,"mtime":1607444828042,"results":"46","hashOfConfig":"30"},{"size":887,"mtime":1607509672145,"results":"47","hashOfConfig":"30"},{"size":3292,"mtime":1607425371044,"results":"48","hashOfConfig":"30"},{"size":4731,"mtime":1607445590844,"results":"49","hashOfConfig":"30"},{"size":1027,"mtime":1607444342511,"results":"50","hashOfConfig":"30"},{"size":4682,"mtime":1607444851439,"results":"51","hashOfConfig":"30"},{"size":1923,"mtime":1607444126412,"results":"52","hashOfConfig":"30"},{"size":5923,"mtime":1607454493386,"results":"53","hashOfConfig":"30"},{"size":623,"mtime":1607464635872,"results":"54","hashOfConfig":"30"},{"size":643,"mtime":1607457220754,"results":"55","hashOfConfig":"30"},{"size":1812,"mtime":1607506251979,"results":"56","hashOfConfig":"30"},{"size":1494,"mtime":1607509898562,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"ldgz6o",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/index.js",[],["119","120"],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/reportWebVitals.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/roots/App.js",["121"],"import React, { useState } from \"react\";\nimport './App.css';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport Signup from \"../Auth/SignUp\";\nimport Login from \"../Auth/Login\";\nimport ProtectedRoute from \"../Auth/ProtectedRoutes\";\n\n\nimport Navbar from \"../../components/Navbar/Navbar\";\nimport RideList from \"../../components/Pages/Rides/RideList\";\nimport RideDetails from '../../components/Pages/Rides/RideDetails';\nimport Home from '../../components/Pages/Home/Home';\nimport About from './../Pages/About/About';\nimport Footer from '../Footer/Footer';\nimport ProfileDetails from '../../components/Pages/Users/ProfileDetails';\nimport UserList from '../../components/Pages/Users/UserList'\nimport Adventures from './../Pages/Adventures/Adventures'\n\n\n\n\nimport AuthService from \"../../Services/auth.services\";\n\n\nfunction App() {\n  \n  //?? App.js state to pass the user session around the routes.\n  const [ loggedInUser, setLoggedInUser] = useState(null);\n\n  const service = new AuthService();\n\n    //?? Function to help fetch a logged in user\n    const fetchUser = () => {\n      if (loggedInUser === null) {\n        service\n          .isAuthenticated()\n          .then((response) => {\n            setLoggedInUser(response);\n          })\n          .catch((err) => {\n            setLoggedInUser(false); //?? Using boolean here so we can do conditional rendering.\n          });\n      }\n    };\n\n\n  //?? Function to help get the loggedIn user\n  const getLoggedInUser = (userObject) => setLoggedInUser(userObject);\n\n  //?? The function is run to check if the user is logged in.\n  fetchUser();\n\n  return (\n    <section className=\"App\">\n      <Navbar userInSession={loggedInUser} getUser={getLoggedInUser} />\n      <Switch>\n        <Route\n          exact\n          path=\"/signup\"\n          render={() => <Signup getUser={getLoggedInUser} />}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={() => <Login getUser={getLoggedInUser} />}\n        />\n        <Route\n          user={loggedInUser}\n          path=\"/\"\n          render={() => <Home getUser={getLoggedInUser} />}\n        />\n        <Route\n          \n          user={loggedInUser}\n          path=\"/about\"\n          render={() => <About getUser={getLoggedInUser} />}\n        />\n        <Route\n          user={loggedInUser}\n          path=\"/adventures\"\n          render={() => <Adventures getUser={getLoggedInUser} />}\n        />\n        <Route\n          user={loggedInUser}\n          path=\"/rides/:id\"\n          component={RideDetails}\n        />\n        <Route\n          exact\n          user={loggedInUser}\n          path=\"/rides\"\n          render={() => <RideList getUser={getLoggedInUser} />}\n        />\n        <Route\n          user={loggedInUser}\n          path=\"/users\"\n          render={() => <UserList getUser={getLoggedInUser} />}\n        />\n        <Route\n          user={loggedInUser}\n          path=\"/user/:id\"\n          component={ProfileDetails}\n        />\n      </Switch>\n      <Footer/>\n    </section>\n  ) \n  \n}\nexport default App;\n\n\n/* \n\nreturn loggedInUser ? (\n    <section className=\"App\">\n      <Navbar userInSession={loggedInUser} getUser={getLoggedInUser} />\n      <Home />\n      <Switch>\n        <ProtectedRoute\n          user={loggedInUser}\n          path=\"/rides/:id\"\n          component={RideDetails}\n        />\n        <ProtectedRoute\n          user={loggedInUser}\n          path=\"/rides\"\n          component={RideList}\n        />\n        <ProtectedRoute\n          user={loggedInUser}\n          path=\"/users\"\n          component={UserList}\n        />\n        <ProtectedRoute\n          user={loggedInUser}\n          path=\"/user/:id\"\n          component={ProfileDetails}\n        />\n      </Switch>\n      <Footer/>\n    </section>\n  ) : (\n    <section className=\"App\">\n      <Navbar userInSession={loggedInUser} getUser={getLoggedInUser} />\n      <Home />\n      <About />\n      <Switch>\n        <Route //?? Here we are setting up the prop route so that the user can be passed on to the app from signup to the App.js\n          exact\n          path=\"/signup\" //?? Passing this function down as a Prop to Signup component.\n          render={() => <Signup getUser={getLoggedInUser} />} //?? the render method allow us to pass on a callback function with that functionality returning the Signup Component which has the getUser prop.\n        /> \n        <Route\n          exact\n          path=\"/login\"\n          render={() => <Login getUser={getLoggedInUser} />}\n        />\n        <ProtectedRoute\n          user={loggedInUser}\n          path=\"/rides/:id\"\n          component={RideDetails}\n        />\n        <ProtectedRoute\n          user={loggedInUser}\n          path=\"/rides\"\n          component={RideList}\n        />\n      </Switch>\n      \n      <Footer/>\n    </section>\n  );\n\n*/","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Navbar/Navbar.js",["122"],"/* import React, { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\"\n\nimport AuthService from '../../Services/auth.services';\n\n\nconst Navbar = (props) => {\n    const [ loggedInUser, setLoggedInUser] = useState(null);\n\n    const service = new AuthService();\n\n    // Mimic lifecycle method when a component updates\n    useEffect(() => {\n      setLoggedInUser(props.userInSession);\n    }, [props.userInSession]);\n  \n    //?? Passing down the loggedin user as props (userinsession) The useffect listens for any change that happens in the props to reflect the changes on the Front-end.\n\n    // function to log user out\n    const logoutUser = () => {\n      service.logout().then(() => {\n        // reset state value\n        setLoggedInUser(null);\n  \n        // reset getUser value\n        props.getUser(null);\n      });\n    };\n\n    if (loggedInUser) {\n        return (\n        <nav className=\"nav-style-loggedin\">\n            <ul>\n            <li>Welcome, {loggedInUser.username}</li>\n            <li>\n                <Link to=\"/rides\" style={{ textDecoration: \"none\" }}>\n                Rides\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/\">\n                <button onClick={logoutUser}>Logout</button>\n                </Link>\n            </li>\n            </ul>\n        </nav>\n        );\n    } else {\n        return (\n        <div>\n            <nav className=\"nav-style\">\n            <ul>\n                <li>\n                <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\n                    Login\n                </Link>\n                </li>\n                <li>\n                <Link to=\"/signup\" style={{ textDecoration: \"none\" }}>\n                    Signup\n                </Link>\n                </li>\n            </ul>\n            </nav>\n        </div>\n        );\n    }\n};\n */\n\n\n\n \nimport React, { useState, useEffect } from 'react';\nimport { Button } from '../Button/Button';\nimport { Link } from 'react-router-dom';\nimport './Navbar.css';\n\nimport AuthService from '../../Services/auth.services';\n\nfunction Navbar(props) {\n  const [click, setClick] = useState(false);\n  const [button, setButton] = useState(true);\n\n  const [ loggedInUser, setLoggedInUser] = useState(null);\n\n  const service = new AuthService();\n\n    // Mimic lifecycle method when a component updates\n    useEffect(() => {\n        setLoggedInUser(props.userInSession);\n      }, [props.userInSession]);\n    \n      //?? Passing down the loggedin user as props (userinsession) The useffect listens for any change that happens in the props to reflect the changes on the Front-end.\n  \n      // function to log user out\n      const logoutUser = () => {\n        service.logout().then(() => {\n          // reset state value\n          setLoggedInUser(null);\n    \n          // reset getUser value\n          props.getUser(null);\n        });\n      };\n\n\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(false);\n    } else {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    showButton();\n  }, []);\n\n  window.addEventListener('resize', showButton);\n\n  if (loggedInUser) {\n  return (\n    <>\n      <nav className='navbar'>\n        <div className='navbar-container'>\n          <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n            En_Route\n            <i className='fab fa-typo3' />\n          </Link>\n          <div className='menu-icon' onClick={handleClick}>\n            <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n          </div>\n          <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n            <li className='nav-item'>\n              <Link to='/' className='nav-links'>\n                Home\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/Adventures'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                Adventures\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link\n                to='/rides'\n                className='nav-links'\n                onClick={closeMobileMenu}\n              >\n                Rides\n              </Link>\n            </li>\n            <li className='nav-item'>\n              <Link to='/user/:id' className='nav-links' onClick={closeMobileMenu}>\n                {<Button buttonStyle='btn--outline'><p>Welcome back <strong>{loggedInUser.username}</strong></p></Button>}\n              </Link>\n            </li>\n          </ul>\n{/*           {button && <Button buttonStyle='btn--outline'>Logout</Button>}\n           */}\n        </div>\n      </nav>\n    </>\n  );\n} else {\n    return (\n        <>\n          <nav className='navbar'>\n            <div className='navbar-container'>\n              <Link to='/' className='navbar-logo' onClick={closeMobileMenu}>\n                En_Route\n                <i class='fab fa-typo3' />\n              </Link>\n              <div className='menu-icon' onClick={handleClick}>\n                <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\n              </div>\n              <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n                <li className='nav-item'>\n                  <Link to='/' className='nav-links' onClick={closeMobileMenu}>\n                    Home\n                  </Link>\n                </li>\n                <li className='nav-item'>\n                  <Link\n                    to='/Adventures'\n                    className='nav-links'\n                    onClick={closeMobileMenu}\n                  >\n                    Adventures\n                  </Link>\n                </li>\n                <li className='nav-item'>\n                  <Link\n                    to='/rides'\n                    className='nav-links'\n                    onClick={closeMobileMenu}\n                  >\n                    Rides\n                  </Link>\n                </li>\n    \n                <li>\n                  <Link\n                    to='/login'\n                    className='nav-links-mobile'\n                    onClick={closeMobileMenu}\n                  >  \n                  </Link>\n                </li>\n              </ul>\n              <Link to=\"/login\">{button && <Button buttonStyle='btn--outline'>Login</Button>}</Link>\n            </div>\n          </nav>\n        </>\n      );\n}\n}\n\nexport default Navbar;","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Auth/SignUp.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/Services/auth.services.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Comments/Form/AddCommentForm.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Auth/ProtectedRoutes.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Auth/Login.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/Services/upload-service.js",[],["123","124"],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Footer/Footer.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Button/Button.js",["125"],"import React, { Component } from 'react';\nimport './Button.css';\nimport { Link } from 'react-router-dom';\n\nconst STYLES = ['btn--primary', 'btn--outline', 'btn--test'];\n\nconst SIZES = ['btn--medium', 'btn--large'];\n\nexport const Button = ({\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  const checkButtonStyle = STYLES.includes(buttonStyle)\n    ? buttonStyle\n    : STYLES[0];\n\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n\n  return (\n    <Link to='/signup' className='btn-mobile'>\n      <button\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\n        onClick={onClick}\n        type={type}\n      >\n        {children}\n      </button>\n    </Link>\n  );\n};","/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Home/Home.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/About/About.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Trainings/Trainings.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Adventures/Adventures.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Users/ProfileDetails.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/Services/user-service.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Users/Forms/EditProfileForm.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Rides/RideDetails.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/Services/ride-service.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Rides/Forms/EditRideForm.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Rides/RideList.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Rides/Forms/AddRideForm.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Home/HeroSection.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Cards/CardItems.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Cards/Cards.js",[],"/Users/yannquintin/Desktop/Projects/En-Route-React/client/src/components/Pages/Users/UserList.js",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":22},{"ruleId":"130","severity":1,"message":"134","line":98,"column":13,"nodeType":"132","messageId":"133","endLine":98,"endColumn":23},{"ruleId":"126","replacedBy":"135"},{"ruleId":"128","replacedBy":"136"},{"ruleId":"130","severity":1,"message":"137","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":26},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'ProtectedRoute' is defined but never used.","Identifier","unusedVar","'logoutUser' is assigned a value but never used.",["138"],["139"],"'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]